(defpackage :isbn
  (:use :cl)
  (:local-nicknames (:ascii-table :ascii-table)
                    (:cl-ppcre    :ppcre)
                    (:dex         :dexador)
                    (:lquery      :lquery)
                    (:plump       :plump))
  (:export #:main))
(in-package #:isbn)

(defun main ()
  (let* ((term (second sb-ext:*posix-argv*))
         (url (concatenate 'string "https://isbnsearch.org/isbn/" term))
         (req (dex:get url))
         (parsed (lquery:$ (lquery:initialize req)))
         (attrs (mapcar (lambda (s) (cl-ppcre:split ":\\s" s))
                        (coerce (lquery:$ parsed ".bookinfo p" (text)) 'list)))
         (names (mapcar #'car attrs))
         (vals (mapcar #'second attrs))
         (rows (reverse (cdr (reverse (mapcar #'list names vals)))))
         (tbl (ascii-table:make-table '("ATTRIBUTE" "VALUE"))))
    (loop for row in rows
          do (eval `(ascii-table:add-row ,tbl ',row))
          finally (ascii-table:display tbl))))
